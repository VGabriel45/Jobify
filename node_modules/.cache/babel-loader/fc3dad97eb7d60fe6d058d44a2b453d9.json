{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gabi/Desktop/Projects/CodeCool_Projects/Team_Projects/Advanced-Java/linkedin-clone (copy)/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { JobContext } from \"./JobsContext\";\nimport Loading from \"./Loading\";\nimport { Link } from 'react-router-dom';\nexport default function SearchBar() {\n  _s();\n\n  const {\n    jobs,\n    loading\n  } = useContext(JobContext);\n  const [isLoading] = loading;\n  const [loadedJobs, setLoadedJobs] = jobs;\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const displayJobs = array => {\n    return array.map(job => /*#__PURE__*/_jsxDEV(Link, {\n      to: '/job/' + job.id,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: job.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: job.company_logo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Job title: \", job.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", job.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Job type: \", job.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this));\n  };\n\n  React.useEffect(() => {\n    const results = loadedJobs.filter(job => job.title.toString().toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  }, [searchTerm]);\n\n  const search = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Job name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: searchTerm,\n          type: \"text\",\n          name: \"search-job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 20\n  }, this);\n\n  const content = isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: searchResults.length > 0 ? displayJobs(searchResults) : displayJobs(loadedJobs)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [search, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"Ml2Jbu/2Wf24dBg9PI/byDvm674=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/gabi/Desktop/Projects/CodeCool_Projects/Team_Projects/Advanced-Java/linkedin-clone (copy)/src/components/SearchBar.js"],"names":["React","useContext","JobContext","Loading","Link","SearchBar","jobs","loading","isLoading","loadedJobs","setLoadedJobs","searchTerm","setSearchTerm","useState","searchResults","setSearchResults","handleChange","event","target","value","displayJobs","array","map","job","id","company","company_logo","title","location","type","useEffect","results","filter","toString","toLowerCase","includes","search","content","length"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { JobContext } from \"./JobsContext\";\nimport Loading from \"./Loading\";\nimport { Link } from 'react-router-dom';\n\nexport default function SearchBar() {\n\n    const { jobs, loading } = useContext(JobContext);\n    const [isLoading] = loading;\n\n\n    const [loadedJobs, setLoadedJobs] = jobs;\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n    const [searchResults, setSearchResults] = React.useState([]);\n\n    const handleChange = event => {\n        setSearchTerm(event.target.value);\n    };\n\n    const displayJobs = (array) => {\n        return array.map((job) => (\n            <Link to={'/job/' + job.id}>\n                <div className=\"card\" key={job.id}>\n                    <h3>{job.company}</h3>\n                    <img src={job.company_logo} alt=\"\" />\n                    <p>Job title: {job.title}</p>\n                    <p>Location: {job.location}</p>\n                    <p>Job type: {job.type}</p>\n                </div>\n            </Link>\n        ));\n    }\n\n    React.useEffect(() => {\n        const results = loadedJobs.filter(job =>\n            job.title.toString().toLowerCase().includes(searchTerm.toLowerCase())\n        );\n\n        setSearchResults(results);\n    }, [searchTerm]);\n\n    const search = <div>\n        <form>\n            <label>\n                Job name: <input onChange={handleChange} value={searchTerm} type=\"text\" name=\"search-job\"></input>\n            </label>\n        </form>\n    </div>\n\n    const content = isLoading ? (\n        <Loading />) :\n        (\n            <div className=\"cards\">\n                {searchResults.length > 0 ? displayJobs(searchResults) : displayJobs(loadedJobs)}\n            </div>\n        );\n\n    return (\n        <React.Fragment>\n            {search}\n            {content}\n        </React.Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
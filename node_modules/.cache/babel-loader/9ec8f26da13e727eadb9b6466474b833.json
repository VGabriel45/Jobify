{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gabi/Desktop/Projects/CodeCool_Projects/Team_Projects/Advanced-Java/linkedin-clone (copy)/src/components/JobDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { JobContext } from \"./JobsContext\";\nimport styled from \"styled-components\";\nconst JobImage = styled.img`\nwidth:50px;`;\n_c = JobImage;\n\nconst JobDetails = props => {\n  _s();\n\n  const {\n    jobs\n  } = useContext(JobContext);\n  const [loadedJobs, setloadedJobs] = jobs;\n  const {\n    match: {\n      params\n    }\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loadedJobs.filter(job => job.id === params.JobID).map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: job.title\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(JobImage, {\n        src: job.company_logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Type: \", job.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Location: \", job.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: job.description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobDetails, \"HM90a3nCh0h3oFQAQZgJL2CZHO4=\");\n\n_c2 = JobDetails;\nexport default JobDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"JobImage\");\n$RefreshReg$(_c2, \"JobDetails\");","map":{"version":3,"sources":["/home/gabi/Desktop/Projects/CodeCool_Projects/Team_Projects/Advanced-Java/linkedin-clone (copy)/src/components/JobDetails.js"],"names":["React","useContext","useState","JobContext","styled","JobImage","img","JobDetails","props","jobs","loadedJobs","setloadedJobs","match","params","filter","job","id","JobID","map","title","company_logo","type","location","__html","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAI;AAC5B,YADA;KAAMD,Q;;AAGN,MAAME,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAExB,QAAM;AAACC,IAAAA;AAAD,MAASR,UAAU,CAACE,UAAD,CAAzB;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BF,IAApC;AACA,QAAM;AAAEG,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAT,MAAwBL,KAA9B;AAEA,sBACI;AAAA,cACKE,UAAU,CAACI,MAAX,CAAkBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWH,MAAM,CAACI,KAA3C,EAAkDC,GAAlD,CAAwDH,GAAD,iBACpD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,kBAAkBA,GAAG,CAACI;AAAtB,SAASJ,GAAG,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAW,QAAA,GAAG,EAAED,GAAG,CAACK,YAApB;AAAkC,QAAA,GAAG,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,6BAAWL,GAAG,CAACM,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,iCAAeN,GAAG,CAACO,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAK,QAAA,uBAAuB,EAAE;AAACC,UAAAA,MAAM,EAAER,GAAG,CAACS;AAAb;AAA9B;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CArBD;;GAAMjB,U;;MAAAA,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { JobContext } from \"./JobsContext\";\nimport styled from \"styled-components\";\n\nconst JobImage = styled.img`\nwidth:50px;`\n\nconst JobDetails = props => {\n\n    const {jobs} = useContext(JobContext);\n    const [loadedJobs, setloadedJobs] = jobs;\n    const { match: { params } } = props;\n\n    return (\n        <div>\n            {loadedJobs.filter(job => job.id === params.JobID).map( (job) => (\n                <div className=\"container\">\n                    <h1 key={job.id}>{job.title}</h1>\n                    <JobImage  src={job.company_logo} alt=\"\"/>\n                    <h4>Type: {job.type}</h4>\n                    <h5>Location: {job.location}</h5>\n                    <div dangerouslySetInnerHTML={{__html: job.description}}>\n                        \n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default JobDetails"]},"metadata":{},"sourceType":"module"}
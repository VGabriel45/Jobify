{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gabi/Desktop/Projects/CodeCool_Projects/Team_Projects/Advanced-Java/jobifyProject/jobifyFrontend/src/components/CompaniesContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const CompaniesContext = /*#__PURE__*/createContext();\nexport const TodosContext = /*#__PURE__*/createContext([[], () => {}]);\nexport const CompanyProvider = props => {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  return /*#__PURE__*/_jsxDEV(CompaniesContext.Provider, {\n    value: [companies, setCompanies],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanyProvider, \"n6Folx/Fj4vk1YkdemQRRK+Pw+Q=\");\n\n_c = CompanyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyProvider\");","map":{"version":3,"sources":["/home/gabi/Desktop/Projects/CodeCool_Projects/Team_Projects/Advanced-Java/jobifyProject/jobifyFrontend/src/components/CompaniesContext.js"],"names":["React","createContext","useState","useEffect","axios","CompaniesContext","TodosContext","CompanyProvider","props","companies","setCompanies","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,gBAAGJ,aAAa,EAAtC;AACP,OAAO,MAAMK,YAAY,gBAAGL,aAAa,CAAC,CAAC,EAAD,EAAK,MAAM,CAAE,CAAb,CAAD,CAAlC;AAEP,OAAO,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE,CAACO,SAAD,EAAYC,YAAZ,CAAlC;AAAA,cACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMJ,e;;KAAAA,e","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const CompaniesContext = createContext();\nexport const TodosContext = createContext([[], () => {}]);\n\nexport const CompanyProvider = (props) => {\n  const [companies, setCompanies] = useState([]);\n\n  return (\n    <CompaniesContext.Provider value={[companies, setCompanies]}>\n      {props.children}\n    </CompaniesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}